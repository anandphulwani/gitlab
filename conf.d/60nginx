#!/bin/bash -ex

source /usr/local/src/gitlab.conf


echo "########################################"
echo "########################################"
echo "########################################"
echo "############## 60nginx #################"
echo "########################################"
echo "########################################"
echo "########################################"

# install nginx

cd /home/git/gitlab
wget http://nginx.org/keys/nginx_signing.key
apt-key add nginx_signing.key

sh -c "cat >>/etc/apt/sources.list.d/sources.list<<EOF

deb http://nginx.org/packages/mainline/debian/ jessie nginx
deb-src http://nginx.org/packages/mainline/debian/ jessie nginx
EOF"

apt-get -y remove nginx
apt-get -y update
apt-get -y install nginx

cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab
ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab

nginx -t
service nginx restart



chmod -R ug+rwX,o-rwx /home/git/repositories
chmod -R ug-s /home/git/repositories
find /home/git/repositories -type d -print0 | sudo xargs -0 chmod g+s

rm /etc/nginx/sites-enabled/default

sh -c "cat >/etc/nginx/sites-available/gitlab<<EOF
upstream gitlab {
    server unix:/home/git/gitlab/tmp/sockets/gitlab.socket fail_timeout=0;
}

upstream gitlab-workhorse {
    server unix:/home/git/gitlab/tmp/sockets/gitlab-workhorse.socket fail_timeout=0;
}

server {
    listen 0.0.0.0:80;
    include /etc/nginx/include/gitlab-proxy;
}

server {
    listen 0.0.0.0:443 ssl;
    include /etc/nginx/include/ssl;
    include /etc/nginx/include/gitlab-proxy;
}
EOF"


mkdir /etc/nginx/include



# Create file /etc/nginx/include/gitlab-proxy
cat <<< 'root /home/git/gitlab/public;

access_log /var/log/nginx/gitlab.access.log;
error_log /var/log/nginx/gitlab.error.log;

location / {
    # serve static files from defined root folder;.
    try_files $uri $uri/index.html $uri.html @gitlab;
}

location @gitlab {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://gitlab;
    proxy_redirect off;
    proxy_buffering off;
}

location ~ [-\/\w\.]+\.git\/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://gitlab-workhorse;
    proxy_redirect off;
    proxy_buffering off;

    proxy_connect_timeout 300;
    proxy_read_timeout 300;
}' > /etc/nginx/include/gitlab-proxy





# Create file /etc/nginx/include/ssl
sudo sh -c "cat >/etc/nginx/include/ssl<<EOF
ssl_certificate      /etc/ssl/private/cert.pem;
ssl_certificate_key  /etc/ssl/private/cert.key;
ssl_session_timeout  5m;
ssl_session_cache shared:SSL:50m;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

# ciphers added by conf/turnkey.d/zz-ssl-ciphers script
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256';

ssl_prefer_server_ciphers   on;

ssl_dhparam /etc/ssl/private/dhparams.pem;
add_header X-Content-Type-Options nosniff;

server_tokens off;
EOF"



